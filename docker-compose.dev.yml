version: "3.8"

services:
  web:
    container_name: web
    build:
      context: ./web
      dockerfile: dev.Dockerfile

    env_file: .env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_DEFAULT_REVALIDATE_TARGET: ${NEXT_PUBLIC_DEFAULT_REVALIDATE_TARGET}
      AUTH_SECRET: ${AUTH_SECRET}
      BIGCOMMERCE_STORE_HASH: ${BIGCOMMERCE_STORE_HASH}
      BIGCOMMERCE_CHANNEL_ID: ${BIGCOMMERCE_CHANNEL_ID}
      BIGCOMMERCE_ACCESS_TOKEN: ${BIGCOMMERCE_ACCESS_TOKEN}
      BIGCOMMERCE_CUSTOMER_IMPERSONATION_TOKEN: ${BIGCOMMERCE_CUSTOMER_IMPERSONATION_TOKEN}
      CLIENT_LOGGER: ${CLIENT_LOGGER}
      ENABLE_ADMIN_ROUTE: ${ENABLE_ADMIN_ROUTE}

    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public
      - ${PWD}/web/tailwind.config.ts:/app/tailwind.config.ts
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - strapi
    networks:
      - strapi

  strapi:
    container_name: strapi
    build:
      context: ./strapi
      dockerfile: Dockerfile
    restart: unless-stopped
    hostname: strapi
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: production
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./strapi/tsconfig.json:/opt/tsconfig.json
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge